{
    "collab_server" : "",
    "contents" : "#ifndef FORCE_HPP\n#define FORCE_HPP\n#include <vector>\n#include <iostream>\n#include \"ConnectedComponent.hpp\"\n#include \"ClusteringResult.hpp\"\n\nnamespace FORCE{\n\n\n\tdouble dist(std::vector<std::vector<double>>& pos,unsigned i, unsigned j);\n\n\tvoid layout(\n\t\t\tconst ConnectedComponent& cc,\n\t\t\tstd::vector<std::vector<double>>& pos,\n\t\t\tdouble p,\n\t\t\tdouble f_att,\n\t\t\tdouble f_rep,\n\t\t\tconst unsigned R,\n\t\t\tdouble start_t,\n\t\t\tconst unsigned dim);\n\n\n\t/*\n\tvoid binarySearchPartition(\n\t\t\tconst ConnectedComponent& cc,\n\t\t\tstd::vector<std::vector<double>>& pos,\n\t\t\tClusteringResult& cr);\n\t\t\t*/\n\n\n\tvoid partition(\n\t\t\tconst ConnectedComponent& cc,\n\t\t\tstd::vector<std::vector<double>>& pos,\n\t\t\tClusteringResult& cs,\n\t\t\tdouble d_init,\n\t\t\tdouble d_maximal,\n\t\t\tdouble s_init,\n\t\t\tdouble f_s);\n\n\n\tstd::vector<std::vector<unsigned>> geometricLinking(\n\t\t\tstd::vector<std::vector<double>>& pos,\n\t\t\tconst double maxDist,\n\t\t\tconst std::vector<std::vector<unsigned>>& objects);\n\n\tinline void DEBUG_delta(\n\t\t\tconst ConnectedComponent& cc,\n\t\t\tstd::vector<std::vector<double>>& pos,\n\t\t\tstd::vector<std::vector<double>>& delta,\n\t\t\tunsigned r)\n\t{\n\t\tfor(unsigned i = 0; i < pos.size(); i++){\n\t\t\tdouble len = 0;\n\t\t\tfor(unsigned j = 0; j < pos[0].size();j++){\n\t\t\t\tlen += pow(delta[i][j],2);\n\t\t\t}\n\t\t\tlen = sqrt(len);\n\t\t\tRcpp::Rcout << cc.getThreshold() << \"\\t\" << r << \"\\t\" << len << \"\\t\" << std::endl;\n\t\t}\n\t}\n\n\tinline void DEBUG_position(\n\t\t\tconst ConnectedComponent& cc,\n\t\t\tstd::vector<std::vector<double>>& pos,\n\t\t\tdouble r)\n\t{\n\t\t//std::cout << \"threshold\\tr\\tx\\ty\" << std::endl;\n\t\tfor(unsigned i = 0; i < pos.size();i++){\n\t\t\tRcpp::Rcout << cc.getId() << \"\\t\" << cc.getThreshold() << \"\\t\" << r << \"\\t\";\n\t\t\tfor(unsigned d = 0;d < pos[0].size();d++){\n\t\t\t\tRcpp::Rcout << pos[i][d] << \"\\t\";\n\t\t\t}\n\t\t\tRcpp::Rcout << std::endl;\n\t\t}\n\t}\n\n\tinline void DEBUG_linking(\n\t\t\tstd::vector<unsigned> membership,\n\t\t\tstd::vector<std::vector<double>> pos,\n\t\t\tdouble threshold,\n\t\t\tunsigned id)\n\t{\n\n\t\t//std::cout << \"cluster\\tx\\ty\\tdist\" << std::endl;\n\t\tfor(unsigned i = 0; i < membership.size(); i++){\n\t\t\tstd::cout << membership.at(i) << \"\\t\" << pos.at(i)[0] << \"\\t\" << pos.at(i)[1] << \"\\t\" << threshold << \"\\t\" << id << std::endl;\n\t\t}\n\t}\n\n}\n#endif\n",
    "created" : 1473158702958.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1323895725",
    "id" : "EF8D2B40",
    "lastKnownWriteTime" : 1473158740,
    "last_content_update" : 1473158740097,
    "path" : "~/Dropbox/Datalogi/Speciale/code/transclustr/src/FORCE.hpp",
    "project_path" : "src/FORCE.hpp",
    "properties" : {
    },
    "relative_order" : 18,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "hpp"
}